# coding: utf-8

"""
    SWAIN API

    A powerful dynamic CRUD API engine that automatically generates RESTful endpoints for your data models SWAIN provides automatic CRUD operations, filtering, pagination, and sorting capabilities for any data model. Features: - Automatic REST API generation - Dynamic model support - Complex filtering and querying - Pagination and sorting - Swagger/OpenAPI documentation - Multiple database support (SQL & NoSQL)

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from pydantic import BaseModel, ConfigDict, StrictBool, StrictInt, StrictStr
from typing import Any, ClassVar, Dict, List, Optional
from typing import Optional, Set
from typing_extensions import Self

class GithubComTakifouhalCrudsqlPkgInternalAuthModelsUser(BaseModel):
    """
    GithubComTakifouhalCrudsqlPkgInternalAuthModelsUser
    """ # noqa: E501
    additional_data: Optional[Dict[str, Any]] = None
    anonymous: Optional[StrictBool] = None
    email: Optional[StrictStr] = None
    id: Optional[StrictInt] = None
    is_active: Optional[StrictBool] = None
    last_login: Optional[StrictStr] = None
    name: Optional[StrictStr] = None
    roles: Optional[List[GithubComTakifouhalCrudsqlPkgInternalAuthModelsRole]] = None
    __properties: ClassVar[List[str]] = ["additional_data", "anonymous", "email", "id", "is_active", "last_login", "name", "roles"]

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of GithubComTakifouhalCrudsqlPkgInternalAuthModelsUser from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        excluded_fields: Set[str] = set([
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        # override the default output from pydantic by calling `to_dict()` of each item in roles (list)
        _items = []
        if self.roles:
            for _item_roles in self.roles:
                if _item_roles:
                    _items.append(_item_roles.to_dict())
            _dict['roles'] = _items
        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of GithubComTakifouhalCrudsqlPkgInternalAuthModelsUser from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "additional_data": obj.get("additional_data"),
            "anonymous": obj.get("anonymous"),
            "email": obj.get("email"),
            "id": obj.get("id"),
            "is_active": obj.get("is_active"),
            "last_login": obj.get("last_login"),
            "name": obj.get("name"),
            "roles": [GithubComTakifouhalCrudsqlPkgInternalAuthModelsRole.from_dict(_item) for _item in obj["roles"]] if obj.get("roles") is not None else None
        })
        return _obj

from openapi_client.models.github_com_takifouhal_crudsql_pkg_internal_auth_models_role import GithubComTakifouhalCrudsqlPkgInternalAuthModelsRole
# TODO: Rewrite to not use raise_errors
GithubComTakifouhalCrudsqlPkgInternalAuthModelsUser.model_rebuild(raise_errors=False)


# coding: utf-8

"""
    SWAIN API

    A powerful dynamic CRUD API engine that automatically generates RESTful endpoints for your data models SWAIN provides automatic CRUD operations, filtering, pagination, and sorting capabilities for any data model. Features: - Automatic REST API generation - Dynamic model support - Complex filtering and querying - Pagination and sorting - Swagger/OpenAPI documentation - Multiple database support (SQL & NoSQL)

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.api_update_filter_payload import ApiUpdateFilterPayload

class TestApiUpdateFilterPayload(unittest.TestCase):
    """ApiUpdateFilterPayload unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApiUpdateFilterPayload:
        """Test ApiUpdateFilterPayload
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApiUpdateFilterPayload`
        """
        model = ApiUpdateFilterPayload()
        if include_optional:
            return ApiUpdateFilterPayload(
                expressions = [
                    None
                    ],
                update_data = { }
            )
        else:
            return ApiUpdateFilterPayload(
        )
        """

    def testApiUpdateFilterPayload(self):
        """Test ApiUpdateFilterPayload"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

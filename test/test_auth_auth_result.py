# coding: utf-8

"""
    SWAIN API

    A powerful dynamic CRUD API engine that automatically generates RESTful endpoints for your data models SWAIN provides automatic CRUD operations, filtering, pagination, and sorting capabilities for any data model. Features: - Automatic REST API generation - Dynamic model support - Complex filtering and querying - Pagination and sorting - Swagger/OpenAPI documentation - Multiple database support (SQL & NoSQL)

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.auth_auth_result import AuthAuthResult

class TestAuthAuthResult(unittest.TestCase):
    """AuthAuthResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AuthAuthResult:
        """Test AuthAuthResult
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AuthAuthResult`
        """
        model = AuthAuthResult()
        if include_optional:
            return AuthAuthResult(
                refresh_token = '',
                roles = [
                    ''
                    ],
                token = '',
                type = '',
                user = openapi_client.models.github_com_takifouhal_crudsql_pkg_internal_auth_models/user.github_com_takifouhal_crudsql_pkg_internal_auth_models.User(
                    additional_data = { }, 
                    anonymous = True, 
                    email = '', 
                    id = 56, 
                    is_active = True, 
                    last_login = '', 
                    name = '', 
                    roles = [
                        openapi_client.models.github_com_takifouhal_crudsql_pkg_internal_auth_models/role.github_com_takifouhal_crudsql_pkg_internal_auth_models.Role(
                            created_at = '', 
                            description = '', 
                            id = 56, 
                            name = '', 
                            permissions = [
                                openapi_client.models.github_com_takifouhal_crudsql_pkg_internal_auth_models/permission.github_com_takifouhal_crudsql_pkg_internal_auth_models.Permission(
                                    allowed_actions = '', 
                                    created_at = '', 
                                    description = '', 
                                    entity_name = '', 
                                    id = 56, 
                                    scope_expression = [
                                        56
                                        ], 
                                    updated_at = '', )
                                ], 
                            updated_at = '', 
                            users = [
                                openapi_client.models.github_com_takifouhal_crudsql_pkg_internal_auth_models/user.github_com_takifouhal_crudsql_pkg_internal_auth_models.User(
                                    anonymous = True, 
                                    email = '', 
                                    id = 56, 
                                    is_active = True, 
                                    last_login = '', 
                                    name = '', )
                                ], )
                        ], )
            )
        else:
            return AuthAuthResult(
        )
        """

    def testAuthAuthResult(self):
        """Test AuthAuthResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
